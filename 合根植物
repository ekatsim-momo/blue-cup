#include<iostream>
#include<algorithm>
#include<string>
#include<cstdio>
#include<cstring>
#include<vector>
using namespace std;
int r, c,R,C;
bool yes[2010][2010], ans[1000010];
void dfs(int i, int j)
{
	if(i%2!=1||j%2!=1)
	yes[i][j] = false;
	if (yes[i][j + 1]&&j+1<=C)
		dfs(i, j + 1);
	if (yes[i+1][j]&&i+1<R)
		dfs(i+1, j);
	if (yes[i][j - 1] &&j>1)
		dfs(i, j - 1);
	if (yes[i-1][j] &&i>1)
		dfs(i-1, j);
}
int main()
{
	int num, a, b;
	memset(yes, false, sizeof(yes));
	memset(ans, true, sizeof(ans));
	scanf("%d%d%d", &r, &c, &num);
	int size = r * c, sum = 0;
	R = 2 * r;
	C = 2 * c;
	for (int j = 1; j < R; j += 2)
		for (int i = 1; i <= C; i += 2)
		{
			yes[j][i] = true;
		}
	while (num--)
	{
		scanf("%d%d", &a, &b);
		ans[a] = false;
		ans[b] = false;
		if (b > a)
			swap(a, b);
		if (a - b != 1)
		{
			if (b%c != 0)
				yes[(b / c) * 2 + 2][(b%c) * 2 - 1] = true;
			else
				yes[(b / c - 1) * 2 + 2][c * 2 - 1] = true;
		}
		else
		{
			yes[(b / c) * 2 + 1][(b%c) * 2] = true;
		}
	}
	for (int i = 1; i <= size; i++)
	{
		if (ans[i])
			sum++;
	}
	for(int i=1;i<R;i++)
		for (int j = i%2+1; j <=C; j+=2)
		{
			if (yes[i][j])
			{
				sum++;
				dfs(i, j);
			}
		}
	printf("%d\n", sum);
	return 0;
}
